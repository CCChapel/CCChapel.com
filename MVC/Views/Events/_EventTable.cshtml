@using CMS.DocumentEngine.Types
@using CCC.Helpers
@using ChurchCommunityBuilder.Api.Events.Entity;
@using CCB;

@model CalendarCollection

<!-- Table Controls -->
<div class="event__table-controls">
    <div class="grid">
        <div class="[ palm--add-bottom-margin palm--center ] [ grid__item two-thirds palm--one-whole ]">
            <input class="search-keywords" type="search" placeholder="Search Keywords">
        </div><!--

     --><div class="[ palm--add-bottom-margin palm--center ] [ grid__item one-third palm--one-whole ]">
            <span class="css3-metro-dropdown">
                <select class="search-campus">
                    <option value="">All Campuses</option>
                    <option value="hudson">Hudson Campus</option>
                    <option value="aurora">Aurora Campus</option>
                    <option value="stow">Stow Campus</option>
                    <option value="highland-square">Highland Square Campus</option>
                </select>
            </span>
        </div>
    </div>

    <div id="date-range-slider"></div>
</div>

<table class="event__table [ palm--hide-col-3 palm--hide-col-4 palm--hide-col-5 ]">
    <thead>
        <tr>
            <th class="one-twelfth palm--one-quarter">Date</th>
            <th class="four-twelfths palm--three-quarters">Name</th>
            <th class="two-twelfths palm--hide">Time</th>
            <th class="two-twelfths palm--hide">Campus</th>
            <th class="two-twelfths palm--hide">Location</th>
        </tr>
    </thead>

    <tbody>
        @{ 
            foreach (Calendar ev in Model.Items)
            {
                DateTime startTime = CMS.Helpers.ValidationHelper.GetDateTime(ev.StartTime, DateTime.Now);
                DateTime endTime = CMS.Helpers.ValidationHelper.GetDateTime(ev.EndTime, DateTime.Now);

                string timeString = startTime.ToTimeRangeString(endTime);

                <tr data-campus="@ev.CampusInfo().CampusCodeName.ToLower()">
                    <td>@ev.Date.Value.ToShortDateString()</td>
                    <td>
                        <a class="event__name" href="#">@ev.EventName.Value</a>
                        <div class="description hidden">
                            <ul class="[ horizontal-list ] [ accent ] [ desk--hide ]">
                                <li>@Html.Raw(timeString)</li><!--
                             --><li>@ev.Location</li>
                            </ul>

                            @Html.Raw(DocumentHelpers.LineBreaksToParagraphs(ev.EventDescription))

                            <div class="event-details__cta [ flex-section inline ]">
                                @{
                                    if (ev.EventInfo().HasRegistration())
                                    {
                                        if (ev.EventInfo().GetForm().IsActive)
                                        {
                                            <a class="[ cta auto ] add-right-margin" href="@ev.EventInfo().GetForm().Url">Register</a>

                                        }
                                        else
                                        {
                                            <a class="[ cta auto disabled ] add-right-margin">Registration Closed</a>
                                        }
                                    }
                                }

                                @{
                                    if (ev.EventInfo().Organizer.CCBID.HasValue)
                                    {
                                        <span class="accent">
                                            <a href="mailto:@ev.EventInfo().GetOrganizer().Email">Questions?</a>
                                        </span>
                                    }
                                }
                            </div>
                        </div>
                    </td>
                    <td>@Html.Raw(timeString)</td>
                    <td>@ev.CampusInfo().CampusName</td>
                    <td>@ev.Location</td>
                </tr>
            }
        }
    </tbody>
</table>

<style>
    @{
        //Show only current campus sermons
        if (!string.IsNullOrWhiteSpace(MiscellaneousHelpers.CurrentCampusName))
        {
            <text>
                tr[data-campus]
                {
                    display: none;
                }

                tr[data-campus~=@MiscellaneousHelpers.CurrentCampus.CampusCodeName.ToLower()]
                {
                    display: table-row;
                }
            </text>
        }
    }
</style>

<script src="/Content/2016-Q1/scripts/includes/jQSlider/jQDateRangeSlider-withRuler-min.js"></script>

<script>
    $(document).ready(function() {
        setupDescriptionToggle();
        setupCampusSearch();
        setupKeywordSearch();
    });

    function setupDescriptionToggle() {
        //Setup Description Toggle
        var selector = ".event__name";
        var descriptionSelector = ".description";

        $(selector).click(function(e) {
            e.preventDefault();

            $(this).parent().children(descriptionSelector).slideToggle();
        });
    }

    function setupKeywordSearch() {
        var selector = ".search-keywords";

        //Setup Change Event
        $(selector).on("input", function() {
            filter();
        });

        //Setup Initial Value
        var qs = getQueryString();

        if (qs["keywords"] !== undefined) {
            $(selector).val(qs["keywords"]);
            filter();
        }
    }

    function setupCampusSearch() {
        var selector = ".search-campus";

        //Setup Initial Value
        $(selector).val(CCChapel.CurrentCampus);

        //Setup Change Event
        $(selector).change(function() {
            filter();
        });
    }

    function filter() {
        var table = ".event__table";
        var keywordField = ".search-keywords";
        var campusSelect = ".search-campus";
        var rowAttribute = "data-campus";
        var linkClass = ".event__name";
        var campusColumnClass = "hide-col-4";

        //Get Keywords
        var keyword = formatStringForComparison($(keywordField).val());

        //Get Campus
        var campus = $(campusSelect).val().toLowerCase();

        //If All Campuses, Show Campus Column
        if (campus == "") {
            $(table).removeClass(campusColumnClass);
        }
        else {
            //If Not, Hide Campus Column
            $(table).addClass(campusColumnClass);
        }

        //Go through each row
        $(table).children("tbody").children("tr").each(function() {
            //Check for campus
            if (($(this).attr(rowAttribute) !== undefined) && ($(this).attr(rowAttribute).indexOf(campus) >=0)) {
                //Check for keyword
                var eventField = $(this).find(linkClass).html();

                if (formatStringForComparison(eventField).indexOf(keyword) >= 0) {
                    $(this).show();
                }
                else {
                    $(this).hide();
                }
            }
            else {
                $(this).hide();
            }
        });

        //Check for no visible rows
        if ($(table + " > tbody tr:visible").length <= 0) {
            showNoResultsRow({ keyword: keyword, campus: campus });
        }
        else {
            //Clean up No Results Rows
            $(table + " > tbody tr.no-results").remove();
        }

        //Companion Functions
        function formatStringForComparison(str) {
            return str.replace(/[^\w\s]/, "").toLowerCase();
        }

        function showNoResultsRow(options) {
            var defaults = {
                keyword: undefined,
                campus: undefined
            };

            options = $.extend({}, defaults, options);

            var html = "Sorry, no events were found ";
            if (keyword !== "") {
                html += "with the word <i>" + keyword + "</i> ";
            }

            var dateRange = $("#calendar-change option:selected").html();
            html += "between " + dateRange.trim();

            if (campus !== "") {
                html += " for " + campus + " Campus."
            }
            else {
                html += ".";
            }

            var tr = $("<tr></tr>").addClass("no-results");
            var td = $("<td></td>").addClass("accent").attr("colspan", "4").html(html);

            $(tr).append(td);
            $(table + " > tbody").append(tr);
        }
    }

    function setFocus(selector) {
        $(selector).focus().click();
    }
</script>