//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine.Types;
using CMS.DocumentEngine;

[assembly: RegisterDocumentType(Person.CLASS_NAME, typeof(Person))]

namespace CMS.DocumentEngine.Types
{
    /// <summary>
    /// Represents a content item of type Person.
    /// </summary>
    public partial class Person : TreeNode
    {
        #region "Constants and variables"

        /// <summary>
        /// The name of the data class.
        /// </summary>
        public const string CLASS_NAME = "people.person";


        /// <summary>
        /// The instance of the class that provides extended API for working with Person fields.
        /// </summary>
        private readonly PersonFields mFields;

        #endregion


        #region "Properties"

        /// <summary>
        /// PersonID.
        /// </summary>
        [DatabaseIDField]
        public int PersonID
        {
            get
            {
                return ValidationHelper.GetInteger(GetValue("PersonID"), 0);
            }
            set
            {
                SetValue("PersonID", value);
            }
        }


        /// <summary>
        /// First Name.
        /// </summary>
        [DatabaseField]
        public string FirstName
        {
            get
            {
                return ValidationHelper.GetString(GetValue("FirstName"), "");
            }
            set
            {
                SetValue("FirstName", value);
            }
        }


        /// <summary>
        /// Last Name.
        /// </summary>
        [DatabaseField]
        public string LastName
        {
            get
            {
                return ValidationHelper.GetString(GetValue("LastName"), "");
            }
            set
            {
                SetValue("LastName", value);
            }
        }


        /// <summary>
        /// Bio.
        /// </summary>
        [DatabaseField]
        public string Bio
        {
            get
            {
                return ValidationHelper.GetString(GetValue("Bio"), "");
            }
            set
            {
                SetValue("Bio", value);
            }
        }


        /// <summary>
        /// Facebook Username.
        /// </summary>
        [DatabaseField]
        public string FacebookUsername
        {
            get
            {
                return ValidationHelper.GetString(GetValue("FacebookUsername"), "");
            }
            set
            {
                SetValue("FacebookUsername", value);
            }
        }


        /// <summary>
        /// Twitter Username.
        /// </summary>
        [DatabaseField]
        public string TwitterUsername
        {
            get
            {
                return ValidationHelper.GetString(GetValue("TwitterUsername"), "");
            }
            set
            {
                SetValue("TwitterUsername", value);
            }
        }


        /// <summary>
        /// InstagramUsername.
        /// </summary>
        [DatabaseField]
        public string InstagramUsername
        {
            get
            {
                return ValidationHelper.GetString(GetValue("InstagramUsername"), "");
            }
            set
            {
                SetValue("InstagramUsername", value);
            }
        }


        /// <summary>
        /// Email.
        /// </summary>
        [DatabaseField]
        public string Email
        {
            get
            {
                return ValidationHelper.GetString(GetValue("Email"), "");
            }
            set
            {
                SetValue("Email", value);
            }
        }


        /// <summary>
        /// Photo.
        /// </summary>
        [DatabaseField]
        public Guid Photo
        {
            get
            {
                return ValidationHelper.GetGuid(GetValue("Photo"), Guid.Empty);
            }
            set
            {
                SetValue("Photo", value);
            }
        }


        /// <summary>
        /// Background Photo.
        /// </summary>
        [DatabaseField]
        public Guid BackgroundPhoto
        {
            get
            {
                return ValidationHelper.GetGuid(GetValue("BackgroundPhoto"), Guid.Empty);
            }
            set
            {
                SetValue("BackgroundPhoto", value);
            }
        }


        /// <summary>
        /// Check this box to make this person available as a speaker for a video or audio file.
        /// </summary>
        [DatabaseField]
        public bool IsSpeaker
        {
            get
            {
                return ValidationHelper.GetBoolean(GetValue("IsSpeaker"), false);
            }
            set
            {
                SetValue("IsSpeaker", value);
            }
        }


        /// <summary>
        /// Gets an object that provides extended API for working with Person fields.
        /// </summary>
        public PersonFields Fields
        {
            get
            {
                return mFields;
            }
        }


        /// <summary>
        /// Provides extended API for working with Person fields.
        /// </summary>
        public partial class PersonFields
        {
            /// <summary>
            /// The content item of type Person that is a target of the extended API.
            /// </summary>
            private readonly Person mInstance;


            /// <summary>
            /// Initializes a new instance of the <see cref="PersonFields" /> class with the specified content item of type Person.
            /// </summary>
            /// <param name="instance">The content item of type Person that is a target of the extended API.</param>
            public PersonFields(Person instance)
            {
                mInstance = instance;
            }


            /// <summary>
            /// PersonID.
            /// </summary>
            public int ID
            {
                get
                {
                    return mInstance.PersonID;
                }
                set
                {
                    mInstance.PersonID = value;
                }
            }


            /// <summary>
            /// First Name.
            /// </summary>
            public string FirstName
            {
                get
                {
                    return mInstance.FirstName;
                }
                set
                {
                    mInstance.FirstName = value;
                }
            }


            /// <summary>
            /// Last Name.
            /// </summary>
            public string LastName
            {
                get
                {
                    return mInstance.LastName;
                }
                set
                {
                    mInstance.LastName = value;
                }
            }


            /// <summary>
            /// Bio.
            /// </summary>
            public string Bio
            {
                get
                {
                    return mInstance.Bio;
                }
                set
                {
                    mInstance.Bio = value;
                }
            }


            /// <summary>
            /// Facebook Username.
            /// </summary>
            public string FacebookUsername
            {
                get
                {
                    return mInstance.FacebookUsername;
                }
                set
                {
                    mInstance.FacebookUsername = value;
                }
            }


            /// <summary>
            /// Twitter Username.
            /// </summary>
            public string TwitterUsername
            {
                get
                {
                    return mInstance.TwitterUsername;
                }
                set
                {
                    mInstance.TwitterUsername = value;
                }
            }


            /// <summary>
            /// InstagramUsername.
            /// </summary>
            public string InstagramUsername
            {
                get
                {
                    return mInstance.InstagramUsername;
                }
                set
                {
                    mInstance.InstagramUsername = value;
                }
            }


            /// <summary>
            /// Email.
            /// </summary>
            public string Email
            {
                get
                {
                    return mInstance.Email;
                }
                set
                {
                    mInstance.Email = value;
                }
            }


            /// <summary>
            /// Photo.
            /// </summary>
            public Attachment Photo
            {
                get
                {
                    return mInstance.GetFieldAttachment("Photo");
                }
            }


            /// <summary>
            /// Background Photo.
            /// </summary>
            public Attachment BackgroundPhoto
            {
                get
                {
                    return mInstance.GetFieldAttachment("BackgroundPhoto");
                }
            }


            /// <summary>
            /// Check this box to make this person available as a speaker for a video or audio file.
            /// </summary>
            public bool IsSpeaker
            {
                get
                {
                    return mInstance.IsSpeaker;
                }
                set
                {
                    mInstance.IsSpeaker = value;
                }
            }
        }

        #endregion


        #region "Constructors"

        /// <summary>
        /// Initializes a new instance of the <see cref="Person" /> class.
        /// </summary>
        public Person() : base(CLASS_NAME)
        {
            mFields = new PersonFields(this);
        }

        #endregion
    }
}