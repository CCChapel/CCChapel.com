//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine.Types;
using CMS.DocumentEngine;

[assembly: RegisterDocumentType(Sermon.CLASS_NAME, typeof(Sermon))]

namespace CMS.DocumentEngine.Types
{
    /// <summary>
    /// Represents a content item of type Sermon.
    /// </summary>
    public partial class Sermon : TreeNode
    {
        #region "Constants and variables"

        /// <summary>
        /// The name of the data class.
        /// </summary>
        public const string CLASS_NAME = "message.sermon";


        /// <summary>
        /// The instance of the class that provides extended API for working with Sermon fields.
        /// </summary>
        private readonly SermonFields mFields;

        #endregion


        #region "Properties"

        /// <summary>
        /// SermonID.
        /// </summary>
        [DatabaseIDField]
        public int SermonID
        {
            get
            {
                return ValidationHelper.GetInteger(GetValue("SermonID"), 0);
            }
            set
            {
                SetValue("SermonID", value);
            }
        }


        /// <summary>
        /// Title.
        /// </summary>
        [DatabaseField]
        public string MessageTitle
        {
            get
            {
                return ValidationHelper.GetString(GetValue("MessageTitle"), "");
            }
            set
            {
                SetValue("MessageTitle", value);
            }
        }


        /// <summary>
        /// The NodeID representing the People.Person object.
        /// </summary>
        [DatabaseField]
        public int MessageSpeakerNodeID
        {
            get
            {
                return ValidationHelper.GetInteger(GetValue("MessageSpeakerNodeID"), 330);
            }
            set
            {
                SetValue("MessageSpeakerNodeID", value);
            }
        }


        /// <summary>
        /// Description.
        /// </summary>
        [DatabaseField]
        public string MessageDescription
        {
            get
            {
                return ValidationHelper.GetString(GetValue("MessageDescription"), "");
            }
            set
            {
                SetValue("MessageDescription", value);
            }
        }


        /// <summary>
        /// Hudson.
        /// </summary>
        [DatabaseField]
        public DateTime MessageHudsonDate
        {
            get
            {
                return ValidationHelper.GetDateTime(GetValue("MessageHudsonDate"), DateTimeHelper.ZERO_TIME);
            }
            set
            {
                SetValue("MessageHudsonDate", value);
            }
        }


        /// <summary>
        /// Aurora.
        /// </summary>
        [DatabaseField]
        public DateTime MessageAuroraDate
        {
            get
            {
                return ValidationHelper.GetDateTime(GetValue("MessageAuroraDate"), DateTimeHelper.ZERO_TIME);
            }
            set
            {
                SetValue("MessageAuroraDate", value);
            }
        }


        /// <summary>
        /// Stow.
        /// </summary>
        [DatabaseField]
        public DateTime MessageStowDate
        {
            get
            {
                return ValidationHelper.GetDateTime(GetValue("MessageStowDate"), DateTimeHelper.ZERO_TIME);
            }
            set
            {
                SetValue("MessageStowDate", value);
            }
        }


        /// <summary>
        /// Highland Square.
        /// </summary>
        [DatabaseField]
        public DateTime MessageHighlandSquareDate
        {
            get
            {
                return ValidationHelper.GetDateTime(GetValue("MessageHighlandSquareDate"), DateTimeHelper.ZERO_TIME);
            }
            set
            {
                SetValue("MessageHighlandSquareDate", value);
            }
        }


        /// <summary>
        /// Transcript.
        /// </summary>
        [DatabaseField]
        public Guid MessageTranscript
        {
            get
            {
                return ValidationHelper.GetGuid(GetValue("MessageTranscript"), Guid.Empty);
            }
            set
            {
                SetValue("MessageTranscript", value);
            }
        }


        /// <summary>
        /// Gets an object that provides extended API for working with Sermon fields.
        /// </summary>
        public SermonFields Fields
        {
            get
            {
                return mFields;
            }
        }


        /// <summary>
        /// Provides extended API for working with Sermon fields.
        /// </summary>
        public partial class SermonFields
        {
            /// <summary>
            /// The content item of type Sermon that is a target of the extended API.
            /// </summary>
            private readonly Sermon mInstance;


            /// <summary>
            /// Initializes a new instance of the <see cref="SermonFields" /> class with the specified content item of type Sermon.
            /// </summary>
            /// <param name="instance">The content item of type Sermon that is a target of the extended API.</param>
            public SermonFields(Sermon instance)
            {
                mInstance = instance;
            }


            /// <summary>
            /// SermonID.
            /// </summary>
            public int ID
            {
                get
                {
                    return mInstance.SermonID;
                }
                set
                {
                    mInstance.SermonID = value;
                }
            }


            /// <summary>
            /// Title.
            /// </summary>
            public string MessageTitle
            {
                get
                {
                    return mInstance.MessageTitle;
                }
                set
                {
                    mInstance.MessageTitle = value;
                }
            }


            /// <summary>
            /// The NodeID representing the People.Person object.
            /// </summary>
            public int MessageSpeakerNodeID
            {
                get
                {
                    return mInstance.MessageSpeakerNodeID;
                }
                set
                {
                    mInstance.MessageSpeakerNodeID = value;
                }
            }


            /// <summary>
            /// Description.
            /// </summary>
            public string MessageDescription
            {
                get
                {
                    return mInstance.MessageDescription;
                }
                set
                {
                    mInstance.MessageDescription = value;
                }
            }


            /// <summary>
            /// Hudson.
            /// </summary>
            public DateTime MessageHudsonDate
            {
                get
                {
                    return mInstance.MessageHudsonDate;
                }
                set
                {
                    mInstance.MessageHudsonDate = value;
                }
            }


            /// <summary>
            /// Aurora.
            /// </summary>
            public DateTime MessageAuroraDate
            {
                get
                {
                    return mInstance.MessageAuroraDate;
                }
                set
                {
                    mInstance.MessageAuroraDate = value;
                }
            }


            /// <summary>
            /// Stow.
            /// </summary>
            public DateTime MessageStowDate
            {
                get
                {
                    return mInstance.MessageStowDate;
                }
                set
                {
                    mInstance.MessageStowDate = value;
                }
            }


            /// <summary>
            /// Highland Square.
            /// </summary>
            public DateTime MessageHighlandSquareDate
            {
                get
                {
                    return mInstance.MessageHighlandSquareDate;
                }
                set
                {
                    mInstance.MessageHighlandSquareDate = value;
                }
            }


            /// <summary>
            /// Attach video and audio files for this sermon.
            /// </summary>
            public IEnumerable<TreeNode> MessageMedia
            {
                get
                {
                    return mInstance.GetRelatedDocuments("MessageMedia");
                }
            }


            /// <summary>
            /// Transcript.
            /// </summary>
            public Attachment MessageTranscript
            {
                get
                {
                    return mInstance.GetFieldAttachment("MessageTranscript");
                }
            }


            /// <summary>
            /// Attach related items here for sermon's cross sell section.
            /// </summary>
            public IEnumerable<TreeNode> MessageRelatedItems
            {
                get
                {
                    return mInstance.GetRelatedDocuments("MessageRelatedItems");
                }
            }
        }

        #endregion


        #region "Constructors"

        /// <summary>
        /// Initializes a new instance of the <see cref="Sermon" /> class.
        /// </summary>
        public Sermon() : base(CLASS_NAME)
        {
            mFields = new SermonFields(this);
        }

        #endregion
    }
}